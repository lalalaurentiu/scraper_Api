name: Django Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django coverage

    - name: Run Django Tests
      env:
        DJANGO_SETTINGS_MODULE: scraper_Api.test_settings
      run: |
        cd scraper_Api
        python manage.py test --verbosity=2
    
    - name: Run Tests with Coverage
      env:
        DJANGO_SETTINGS_MODULE: scraper_Api.test_settings
      run: |
        cd scraper_Api
        coverage run --source='.' manage.py test
        coverage report --skip-covered
        coverage xml
    
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./scraper_Api/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  pytest:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django coverage

    - name: Run Pytest
      env:
        DJANGO_SETTINGS_MODULE: scraper_Api.test_settings
      run: |
        cd scraper_Api
        pytest -v --tb=short